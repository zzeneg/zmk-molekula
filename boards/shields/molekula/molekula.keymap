/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define NAV 1
#define NUM 2
#define FUNC 3
#define SYS 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";

            bindings = <
                                       &kp W         &kp E          &kp R         &kp T            &kp Y    &kp U         &kp I          &kp O
                &kp Q    &hm LGUI A    &hm LALT S    &hm LCTRL D    &hm LSHFT F   &kp G            &kp H    &hm RSHFT J   &hm RCTRL K    &hm LALT L    &hm RGUI P  &kp SEMI
                         &kp Z         &kp X         &kp C          &kp V         &kp B            &kp N    &kp M         &kp COMMA      &kp DOT       &kp SLASH
                                                 &kp ESC  &lt NUM SPACE  &lt FUNC TAB        &kp ENTER  &lt NAV BSPC  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            display-name = "NAV";

            bindings = < 
                                   &none      &none        &none       &none              &none         &kp INS    &kp PG_DN    &kp PG_UP
                &none    &kp LGUI  &kp LALT   &kp LCTRL    &kp LSHFT   &none              &kp LA(UP)    &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT    &none
                         &none     &none      &none        &none       &none              &kp LA(DOWN)  &kp HOME   &kp END      &none        &none
                                                    &trans     &trans     &trans        &trans      &trans     &mo SYS
            >;
        };

        num_layer {
            display-name = "NUM";

            bindings = <
                                       &kp N7      &kp N8      &kp N9      &kp COMMA          &none      &none        &none       &none
                 &kp MINUS  &kp N0     &kp N4      &kp N5      &kp N6      &kp DOT            &none      &kp RSHFT    &kp RCTRL   &kp LALT   &kp RGUI     &none
                            &none      &kp N1      &kp N2      &kp N3      &kp BSPC           &none      &none        &none       &none      &none
                                                      &kp ENTER     &trans     &trans       &trans      &trans     &trans
            >;
        };

        func_layer {
            display-name = "FUNC";

            bindings = <
                                       &kp F7      &kp F8      &kp F9      &kp F11             &none        &kp PSCRN    &kp SLCK     &kp PAUSE_BREAK
                &none      &kp LCTRL   &kp F4      &kp F5      &kp F6      &kp F12             &none        &kp RSHFT    &kp RCTRL    &kp LALT         &kp RGUI    &none
                           &none       &kp F1      &kp F2      &kp F3      &kp F10             &none        &kp CAPS     &kp KP_NUM   &none            &none
                                                 &trans     &kp C_NEXT     &kp C_PP        &trans      &trans     &trans
            >;
        };

        sys_layer {
            display-name = "SYS";

            bindings = <
                                    &none     &none     &none     &none           &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
                &none     &none     &none     &none     &none     &none           &ext_power EP_ON   &out OUT_BLE  &none         &none         &bt BT_SEL 4     &bt BT_CLR
                          &none     &none     &none     &none     &none           &ext_power EP_OFF  &out OUT_USB  &none         &none         &studio_unlock
                                                &none     &none     &none       &bootloader     &trans      &trans
            >;
        };

        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };

        extra3 {
            status = "reserved";
        };
    };
};